ProductController
Get Products - Done
Add a Product - Done
Get one Product - Done
Filter - Done
Rate Product - Done
Add items to cart - Done
Get items of cart - Done
Remove items from cart - Done

UserController
Signup - Email, Name, Password, TypeOfUser(customer, seller) - Done
Signin - (Email, Password) - Done

Folder Structure
Route configuration
Creating APIs
Different API Methods
Middlewares
Route parameters
Query parameters
Testing api using postman
Securing Api using jwt token
Documenting API using swagger
CORS
Logging 
Error Handling

format for aggregration pipeline(calculationg average price of products of a particular category):
{
_id: cat1,
averagePrice: 50000}

2. Find the average rating of a product
db.products.aggregrate([
    //1. create documents for ratings
    {
        $unwind: "$ratings"
    },
    //2. Group ratings per products and get average
    {
        $group: {
            _id: "$name",
            averageRating: {$avg: "$ratings.rating"}
        }
    }
])

db.products.aggregate([
    //1. Stage 1: project name of product, count of rating
    $project: {name: 1, countOfRating: {
        $cond: {if: {$isArray: "$ratings"}, then: {$size: $"$ratings"}, else: 0}
    }},
    {
        // stage 2: sort the collection
        $sort: {countOfRating: -1}
    }, 
    {
        // 3. limit to just 1 item in result
        $limit: 1
    }
        
])
